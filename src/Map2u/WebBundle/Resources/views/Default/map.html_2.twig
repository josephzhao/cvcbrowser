
{#{% block test %}
<div id="testt" data-spy="affix" data-offset-top="200">...</div>
{% endblock %}#}

<div class="container-fluid"  style="padding-bottom: 10px;margin-bottom: 10px;border-bottom: 2px   #090 ridge;">
    <div class="row-fluid">
        <div id="map_mainpanel" class="span12">
            <div class="row-fluid">
                <div id="map2uweb_map" class="span12" style="border:1px #090 solid" >
                </div>               
            </div>
        </div>
   </div>
</div>


{% block javascripts %}
<script type="text/javascript">

            var mapapp;
            
            
            window.onload = function() {

            //   $('#testt').affix();
            
            $("#map_feature_info").click(function() {
                
              
                
                if($("#map_feature_info").hasClass('active')===true)
                    mapapp.selectCtrl.deactivate();
                else
                {
                    mapapp.selectCtrl.activate();
                    if (mapapp.mapeditor.editMode === true)
                    {
                        mapapp.mapeditor.stopEditMode();
                        if ($("#Div_MousePosition_id"))
                        {
                            $("#Div_MousePosition_id").removeClass('olControlMousePosition olControlMousePosition_bottom');
                            $("#Div_MousePosition_id").addClass('olControlMousePosition_top');
                        }
                    }
                }
            });
            
            
                        
           
                
            OpenLayers.Editor.Control.SaveFeature.prototype.saveFeatures = function() {

            // if the save features button is disabled
            if ($(this.panel_div).hasClass("oleControlDisabled") == true)
                    return;
            if (this.layer.selectedFeatures.length > 1)
            {
                var bSameType = true;
                var geometryTypeName = '';
                for (var i = 0; i < this.layer.selectedFeatures.length; i++)
                {
                    if (geometryTypeName == '')
                            geometryTypeName = this.layer.selectedFeatures[i].geometry.CLASS_NAME;
                    else
                    {
                        if (geometryTypeName !== this.layer.selectedFeatures[i].geometry.CLASS_NAME)
                        {
                        alert("Sorry,you can not save different type geometry together!");
                                return;
                        }
                    }
                }

            }
            if ($('#new_feature_save_pane').length === 0)
            {
            // if #new_feature_save_pane not exist, then create it
            $("#map_home_tabs li").removeClass("active");
                    $("#map_home_tabs").append('<li class="tab active"><a href="#new_feature_save_pane" data-toggle="tab" >Custom Feature<button class="close closeTab" type="button" >Ã—</button></a></li>');
                    $('#map_home_tabs_content')
                    .append(
                            $('<div class="" style="padding: 10px 20px 10px 20px"></div>')
                            .addClass('tab-pane active')
                            .attr('id', 'new_feature_save_pane')
                            );
                    $('#new_feature_save_pane').siblings().removeClass("active");
                    $('#new_feature_save_pane').tab('show');
                    registerMapHomeTabsCloseEvent();
            }
            else
            {
            // if #new_feature_save_pane exist, then  activate it
            $('#map_home_tabs a[href=#new_feature_save_pane]').tab('show');
            }


            $.get("{{ path('juturnadefault_custom_feature')}}", function(response) {

            //      $( "#result" ).empty().append( content );
            $("#new_feature_save_pane").html(response);
            });
            {#
            var geoJSON = new OpenLayers.Format.GeoJSON();
                    var geometries = geoJSON.write(mapapp.UserCustomGeoms.features);
                    if (this.layer.selectedFeatures.length > 0)
            {
                     {% if app.user %}
            $.post("{{ path('map2uweb_savegeometries')}}", {userid: {{app.user.id}}, overwrite: true, geometries: geometries}, function(response) {
            if (response.success === true)
            {   // if save features to server successfully, then refresh the list
            alert(mapapp.UserCustomGeoms.features.length + " features have been saved!")
                    refreshUserCustomGeomsList();
            }

            });
                        {% endif %}
            }
            else
            {
            alert("There is no feature to be saved!");
            }
#}

            }
  
            
            OpenLayers.Editor.Control.LayerSwitcherRadio.prototype.onChangeActiveLayer = function() {
               
                    var activelayers = mapapp.map.getLayersByName(mapapp.map.currentActiveLayer);
                    if(activelayers)
                    {
                        mapapp.selectCtrl.layers = activelayers;
                        activelayers[0].setVisibility(true);
                        mapapp.selectCtrl.protocol = OpenLayers.Protocol.WFS.fromWMSLayer(activelayers[0],
                            {featureNS: "http://cobas.juturna.ca:8080/cobasmap"});
                    }
                
            }
 
        
                    OpenLayers.Map.prototype.zoomToMaxExtent = function() {
                            var bounds = this.maxExtent;
                            this.zoomToExtent(bounds);
                    };
                    OpenLayers.Renderer.SVG.prototype.createRenderRoot = function() {
                            var svg = this.nodeFactory(this.container.id + "_svgRoot", "svg");
                            svg.style.position = "absolute";
                            return svg;
                    };
                    //  alert($("#map2uweb_map").css("width"));
                    //      $("#map2uweb_map").css("width",$("#map2uweb_map").css("width")-10);
                    //   alert($("#mapcolumn_id").css("width"));
                    //   alert($("#map2uweb_map").css("width"));
                    //   alert($('#map2uweb_map_container').height() + "  " + $('#map2uweb_map_container').width());
                    mapapp = this;
                  
                        OpenLayers.ProxyHost = "/cgi-bin/proxy.cgi?url=";
      
                        var format = "image/png";
                        OpenLayers.IMAGE_RELOAD_ATTEMPTS = 3;
                        OpenLayers.Util.onImageLoadErrorColor = "transparent";

                    //    alert("1=" + new OpenLayers.Util.getElement("map2uweb_map"));
                    var map = new OpenLayers.Map({div: new OpenLayers.Util.getElement("map2uweb_map"),
                            allOverlays: false});
                    //       var bounds = new OpenLayers.Bounds(-80.02471, 43.58157, -78.97763, 44.04841).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));
                    //    alert("2");
                    //     Proj4js.defs["EPSG:32617"] = "+proj=utm +zone=17 +datum=WGS84 +units=m +no_defs";
                    Proj4js.defs["EPSG:32617"] = "+proj=tmerc +lat_0=0 +lon_0=-84 +k=0.9996 +x_0=500000 +y_0=0 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs";
 {#                   var bounds = new OpenLayers.Bounds(
                            533276.485162893, 1042235.21052269,
                            553567.485131743, 1028501.13021492
                            ).transform(new OpenLayers.Projection("EPSG:32617"), new OpenLayers.Projection("EPSG:900913"));
#}  {#                  var bounds = new OpenLayers.Bounds(
                            - 83.69173, 9.45125,
                            - 83.53003, 9.27070
                            ).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));
     #}                    var bounds = new OpenLayers.Bounds(
                            - 80.33862, 43.99255,
                            - 79.41988, 43.44966
                            ).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));
     
                     map.projection = new OpenLayers.Projection("EPSG:900913");
                    map.displayProjection = new OpenLayers.Projection("EPSG:4326");
                    var osm = new OpenLayers.Layer.OSM('Open Street Map');
                    osm.isBaseLayer = true;
                    //    map.addLayers([osm]);


                    map.addLayers([
                            new OpenLayers.Layer.Google('{{"Google Terrain"|trans}}',
                            {type: google.maps.MapTypeId.TERRAIN, visibility: false, numZoomLevels: 20},
                            {sigleTile: false, isBaseLayer: true, buffer: 0}
                            ),
                            new OpenLayers.Layer.Google('{{"Google Satellite"|trans}}',
                            {type: google.maps.MapTypeId.SATELLITE, visibility: false, numZoomLevels: 20},
                            {sigleTile: false, isBaseLayer: true, buffer: 0}
                            ),
                            new OpenLayers.Layer.Google('{{"Google Hybrid"|trans}}',
                            {type: google.maps.MapTypeId.HYBRID, visibility: false, numZoomLevels: 20},
                            {sigleTile: false, isBaseLayer: true, buffer: 0}
                            ),
                            new OpenLayers.Layer.Google('{{"Google Streets"|trans}}',
                            {visibility: false, numZoomLevels: 20},
                            {sigleTile: false, isBaseLayer: true, buffer: 0}
                            )]);
                    var cleared_land_2008 = new OpenLayers.Layer.WMS(
                            "cleared_land_2008", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:cleared_land_2008',
                            name: 'cleared_land_2008',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var pobladosinternos = new OpenLayers.Layer.WMS(
                            "LOCAL TOWNS", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:pobladosinternos',
                            name: 'LOCAL TOWNS',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                     var user_custom_layer = new OpenLayers.Layer.WMS(
                            "pobladosinternos", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:station',
                            name: 'pobladosinternos',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
           
                    var los_cusingos_2008 = new OpenLayers.Layer.WMS(
                            "los_cusingos_2008", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:los_cusingos_2008',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var coffee_2008 = new OpenLayers.Layer.WMS(
                            "coffee_2008", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:coffee_2008',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var pasture_2008 = new OpenLayers.Layer.WMS(
                            "pasture_2008", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:pasture_2008',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var restored_patches_final = new OpenLayers.Layer.WMS(
                            "restored_patches_final", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:restored_patches_final',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var small_forest_patches = new OpenLayers.Layer.WMS(
                            "small_forest_patches", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:small_forest_patches',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var forestpatches_2008 = new OpenLayers.Layer.WMS(
                            "forestpatches_2008", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:forestpatches_2008',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var landuse_2008_merge = new OpenLayers.Layer.WMS(
                            "landuse_2008_merge", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:landuse_2008_merge',
                            name: 'landuse_2008_merge',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                     visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var cct_forest_98 = new OpenLayers.Layer.WMS(
                            "cct_forest_98", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:cct_forest_98',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                    visibility: false,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var stations_layer = new OpenLayers.Layer.WMS(
                            "Stations", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:station',
                            name: 'Stations',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
                    var capacidad_ugm_cobas = new OpenLayers.Layer.WMS(
                            "CAPACITY", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:capacidad_ugm_cobas',
                            name: 'CAPACITY',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             activeDisabled: true,
                              singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var buffer_3km = new OpenLayers.Layer.WMS(
                            "BUFFER", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:buffer_3km',
                            name: 'BUFFER',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             activeDisabled: true,
                              singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var cobertura_ugm_cobas = new OpenLayers.Layer.WMS(
                            "COVERAGE", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:cobertura_ugm_cobas',
                            name: 'COVERAGE',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             activeDisabled: true,
                              singleTile: true ,
                               visibility: false,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var corredor = new OpenLayers.Layer.WMS(
                            "CORRIDOR", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:corredor_dissolved',
                            name: 'CORRIDOR',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                           singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var importanciaHidrica_ugm_cobas = new OpenLayers.Layer.WMS(
                            "HYDROLOGICAL IMPORTANCE", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:importanciahidrica_ugm_cobas',
                            name: 'HYDROLOGICAL IMPORTANCE',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             activeDisabled: true,
                              visibility: false,
                              singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var limites = new OpenLayers.Layer.WMS(
                            "LIMITS", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:limites',
                            name: 'LIMITS',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             activeDisabled: true,
                             visibility: false,
                              singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
                    var poblads_ugm_cobas = new OpenLayers.Layer.WMS(
                            "TOWNS", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:poblads_ugm_cobas',
                            name: 'TOWNS',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var dam_sites = new OpenLayers.Layer.WMS(
                            "Dam Sites", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:dam_sites',
                            name: 'Dam Sites',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
                    var red_camino_ugm_cobas = new OpenLayers.Layer.WMS(
                            "ROAD NETWORK", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:red_camino_ugm_cobas',
                            name: 'ROAD NETWORK',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            activeDisabled: true,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
                    var relieve_ugm_corredor = new OpenLayers.Layer.WMS(
                            "TOPOGRAPHY", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:relieve_ugm_corredor',
                            name: 'TOPOGRAPHY',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                             activeDisabled: true,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
                        var rios_150_ugm_cobas = new OpenLayers.Layer.WMS(
                            "RIVERS", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:rios_150_ugm_cobas',
                            name: 'RIVERS',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             activeDisabled: true,
                              singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
            
                        var user_tourism_geoms = new OpenLayers.Layer.WMS(
                            "Tourism", "http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wms",
                    {
                    layers: 'cobasvirtual:user_tourism_geoms',
                            name: 'Tourism',
                            projection: new OpenLayers.Projection("EPSG:32617"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
                    var subwatersheds = new OpenLayers.Layer.WMS(
                            "Subwatershed", "http://cobas.juturna.ca:8080/geoserver/juturna/wms",
                    {
                    layers: 'juturna:cvcsubwatersheds',
                            name: 'Subwatershed',
                            projection: new OpenLayers.Projection("EPSG:4326"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
                    var watersheds = new OpenLayers.Layer.WMS(
                            "Watershed", "http://cobas.juturna.ca:8080/geoserver/juturna/wms",
                    {
                    layers: 'juturna:cvcwatersheds',
                            name: 'Watershed',
                            projection: new OpenLayers.Projection("EPSG:4326"),
                            transparent: true,
                            tiled: true
                    },
                    {
                    buffer: 0,
                            isBaseLayer: false,
                            showLegend: false,
                             singleTile: true ,
                            displayOutsideMaxExtent: true,
                            yx: {'EPSG:4326': false}
                    }
                    );
            
            
                   
       {#   1.  buffer_3km = BUFFER
2.capacidad _ugm_cobas = CAPACITY
3. cobas = ALEXANDER SKUTCH BIOLOGICAL CORRIDOR (ASBC)
4.cobertura_ugm_cobas = COVERAGE
5. corredor = CORRIDOR
6. importanciaHidrica_ugm_cobas = HYDROLOGICAL IMPORTANCE
7.limites = LIMITS
8. pobladosInternos = LOCAL TOWNS
9.poblads_ugm_cobas = TOWNS
10.red_camino _ugm_cobas = ROAD NETWORK
11. relieve_ugm_corredor = TOPOGRAPHY
12. rios_150_ugm_cobas = RIVERS

#}

            
                    this.landuse_2008_merge = landuse_2008_merge;
                    //     alert("25");
                    //    map.addControl(new OpenLayers.Control.Scale());
                    //      alert(OpenLayers.Util.getElement("webgismap_layerSwitcher") + "  " + $('#map2uweb_map_container').width());

                    if (OpenLayers.Util.getElement("webgismap_layerSwitcher"))
            {
            var layerSwitcher = new OpenLayers.Editor.Control.LayerSwitcherRadio(
            {
            'div': new OpenLayers.Util.getElement("webgismap_layerSwitcher")
            });
                    map.addControl(layerSwitcher);
            }
            ;
            mapapp.layerSwitcher=layerSwitcher;
             var UserCustomGeoms = null;
            {% if app.user %}
            saveStrategy = new OpenLayers.Strategy.Save();
                    saveStrategy.events.register("success", '', SaveFeatureChangesSuccess);
                    saveStrategy.events.register("failure", '', SaveFeatureChangesFailed);
                  {#  var UserCustomGeoms = new OpenLayers.Layer.Vector("User Custom Layer", {
                    strategies: [new OpenLayers.Strategy.BBOX(), saveStrategy],
                            projection: 'EPSG:32617',
                            //       displayInLayerSwitcher: false,
                            protocol: new OpenLayers.Protocol.WFS({
                            version: '1.1.0',
                                    url: 'http://cobas.juturna.ca:8080/geoserver/cobasvirtual/wfs',
                                    featurePrefix: 'usercustomgeoms',
                                    featureNS: 'http://cobas.juturna.ca:8080/cobasvirtual',
                                    featureType: 'usercustomgeoms',
                                    geometryName: 'the_geom',
                                    extractAttributes: true,
                                    srsName: 'EPSG:32617',
                                    isBaseLayer: false,
                                    visibility: true,
                                    schema: 'http://cobas.juturna.ca:8080/geoserver/wfs/DescribeFeatureType?version=1.1.0&;typename=cobasvirtual:usercustomgeoms'
                            })
                    } );#}

             UserCustomGeoms = new OpenLayers.Layer.Vector("User Custom Layer", {     projection: new OpenLayers.Projection("EPSG:32617"),
                    transparent: true, isBaseLayer: false,
                    visibility: true});
                    mapapp.UserCustomGeoms = UserCustomGeoms;
                    {% endif %}

            // Define three colors that will be used to style the cluster features
            // depending on the number of features they contain.
            var colors = {
            low: "rgb(181, 226, 140)",
                    middle: "rgb(241, 211, 87)",
                    high: "rgb(253, 156, 115)"
            };
                    // Define three rules to style the cluster features.
                    var lowRule = new OpenLayers.Rule({
                    filter: new OpenLayers.Filter.Comparison({
                    type: OpenLayers.Filter.Comparison.LESS_THAN,
                            property: "count",
                            value: 15
                    }),
                            symbolizer: {
                            fillColor: colors.low,
                                    fillOpacity: 0.9,
                                    strokeColor: colors.low,
                                    strokeOpacity: 0.5,
                                    strokeWidth: 12,
                                    pointRadius: 10,
                                    label: "${count}",
                                    labelOutlineWidth: 0,
                                    fontColor: "#ffffff",
                                    fontWeight: 400,
                                    fontOpacity: 0.8,
                                    fontFamily: "Helvetica Neue",
                                    fontSize: "12px"
                            }
                    });
                    var middleRule = new OpenLayers.Rule({
                    filter: new OpenLayers.Filter.Comparison({
                    type: OpenLayers.Filter.Comparison.BETWEEN,
                            property: "count",
                            lowerBoundary: 15,
                            upperBoundary: 50
                    }),
                            symbolizer: {
                            fillColor: colors.middle,
                                    fillOpacity: 0.9,
                                    strokeColor: colors.middle,
                                    strokeOpacity: 0.5,
                                    strokeWidth: 12,
                                    pointRadius: 15,
                                    label: "${count}",
                                    labelOutlineWidth: 0,
                                    fontFamily: "Helvetica Neue",
                                    fontColor: "#ffffff",
                                    fontWeight: 400,
                                    fontOpacity: 0.8,
                                    fontSize: "12px"
                            }
                    });
                    var highRule = new OpenLayers.Rule({
                    filter: new OpenLayers.Filter.Comparison({
                    type: OpenLayers.Filter.Comparison.GREATER_THAN,
                            property: "count",
                            value: 50
                    }),
                            symbolizer: {
                            fillColor: colors.high,
                                    fillOpacity: 0.9,
                                    strokeColor: colors.high,
                                    strokeOpacity: 0.5,
                                    strokeWidth: 12,
                                    pointRadius: 20,
                                    label: "${count}",
                                    fontFamily: "Helvetica Neue",
                                    fontWeight: 400,
                                    labelOutlineWidth: 0,
                                    fontColor: "#ffffff",
                                    fontOpacity: 0.8,
                                    fontSize: "12px"
                            }
                    });
                    // Create a Style that uses the three previous rules
                    var style = new OpenLayers.Style(null, {
                    rules: [lowRule, middleRule, highRule]
                    });
                    var worldcity_vector = new OpenLayers.Layer.Vector("Features Cluster", {
                    protocol: new OpenLayers.Protocol.HTTP({
                    url: "{{asset('/bundles/map2ucore/')}}world_cities.json",
                            format: new OpenLayers.Format.GeoJSON({
                            externalProjection: new OpenLayers.Projection("EPSG:4326"),
                                    internalProjection: new OpenLayers.Projection("EPSG:900913")
                            })
                    }),
                            renderers: ['Canvas', 'SVG'],
                            strategies: [
                                    new OpenLayers.Strategy.Fixed(),
                                    new OpenLayers.Strategy.AnimatedCluster({
                                    distance: 45,
                                            animationMethod: OpenLayers.Easing.Expo.easeOut,
                                            animationDuration: 10
                                    })
                            ],
                            styleMap:  new OpenLayers.StyleMap(style)
                    });
                    
                    
                   

                    map.addLayers([subwatersheds,watersheds]);
  //                  map.addLayers([stations_layer,pobladosinternos, dam_sites,rios_150_ugm_cobas,relieve_ugm_corredor,red_camino_ugm_cobas,poblads_ugm_cobas,user_tourism_geoms,limites,buffer_3km,capacidad_ugm_cobas,cobertura_ugm_cobas,corredor,importanciaHidrica_ugm_cobas, cct_forest_98, los_cusingos_2008, cleared_land_2008, coffee_2008, pasture_2008, restored_patches_final, small_forest_patches, forestpatches_2008, landuse_2008_merge  ]);
                    var mapeditor = new OpenLayers.Editor(map,
                    {
                    autoActivate: true,
                    {% if app.user %}
                        editLayer: UserCustomGeoms,
                    {% endif %}
                    saveState: true,
                            activeControls:
                            [ 'Navigation', 'Separator', 'DragFeature', {% if app.user %}'SaveFeature',{% endif %} 'DeleteFeature', 'SelectFeature',
                                    'Separator', 'DrawHole', 'ModifyFeature', 'Separator'],
                            featureTypes:
                            ['regular', 'polygon', 'path', 'point']
                    });
                    mapapp.mapeditor = mapeditor;
                    mapapp.mapeditor.startEditMode();
                    map.addControl(new OpenLayers.Control.MousePosition({id: 'Div_MousePosition_id', class: 'olControlMousePosition_bottom', displayProjection: new OpenLayers.Projection('EPSG:4326'), emptyString: '   '}));
                    map.maxExtent = bounds;
                    ctrl = new OpenLayers.Control.NavigationHistory();
                    map.addControl(ctrl);
                    map.zoomToExtent(bounds);
                    mapapp.map = map;
                    mapapp.NavigationHistoryCtrl = ctrl;
                    var markers = new OpenLayers.Layer.Markers("Markers", {'displayInLayerSwitcher':false});
                    map.addLayer(markers);
                    mapapp.markers = markers;
                    if ($("#Div_MousePosition_id") && mapapp.mapeditor.editMode === true)
                    {
                        $("#Div_MousePosition_id").removeClass('olControlMousePosition');
                        $("#Div_MousePosition_id").addClass('olControlMousePosition_bottom');
                    }
                    else
                    {

                        if ($("#Div_MousePosition_id"))
                        {

                            $("#Div_MousePosition_id").removeClass('olControlMousePosition');
                            $("#Div_MousePosition_id").addClass('olControlMousePosition_top');
                        }
                    }
            
             var selectCtrl = new OpenLayers.Control.GetFeature({
                        internalProjection: mapapp.map.getProjectionObject(),
                        externalProjection: new OpenLayers.Projection("EPSG:32617"),
                        protocol: OpenLayers.Protocol.WFS.fromWMSLayer(stations_layer,
                                {featureNS: "http://cobas.juturna.ca:8080/cobasmap"}),
                        hover: false,
                        format: format,
                        multipleKey: "shiftKey",
                        toggleKey: "ctrlKey"
                     });       
                   //  alert(map.layers.length);
                   var j=1;
                 
                for( var ii=0;ii< map.layers.length; ii++)
                {  if(map.layers[ii].isBaseLayer !== true)
                    {
                        map.layers[ii].setZIndex(600-5*j);
                         j=j+1;
                    }
                }
               if(UserCustomGeoms != undefined && UserCustomGeoms != null)
               {
                   UserCustomGeoms.setZIndex(605);
                  
               }
               
            selectCtrl.events.register("featureselected", this, function(e) {
                mapapp.mapeditor.editLayer.addFeatures([e.feature]);
                onCreateFeatureDetailsTab(e.feature);
               
            });
            selectCtrl.events.register("featureunselected", this, function(e) {
                if (e && e.feature)
                {
                    mapapp.mapeditor.editLayer.removeFeatures([e.feature]);
                    onDeleteFeaturePopup(e.feature);
                }
            });
            selectCtrl.events.register("outfeature", this, function(e) {
                if (e && e.feature)
                    mapapp.mapeditor.editLayer.removeFeatures([e.feature]);
            });
            mapapp.map.addControl(selectCtrl);
            selectCtrl.activate();
           
            mapapp.selectCtrl=selectCtrl;
 
                refreshLegend(map);
                refreshUserCustomGeomsList();
            }
    function  onResetExtend() {
        mapapp.map.zoomToMaxExtent();
    }
    function  onEditorToolbar() {
        if (mapapp.mapeditor.editMode === false)
        {
            mapapp.mapeditor.startEditMode();
            if ($("#Div_MousePosition_id"))
            {
                $("#Div_MousePosition_id").addClass('olControlMousePosition_bottom');
                $("#Div_MousePosition_id").removeClass('olControlMousePosition_top');
            }
            
             if($("#map_feature_info").hasClass('active')===true)
             {
                 $("#map_feature_info").removeClass('active');
                 mapapp.selectCtrl.deactivate();
             }
        }
        else
        {
            mapapp.mapeditor.stopEditMode();
            if ($("#Div_MousePosition_id"))
            {
                $("#Div_MousePosition_id").removeClass('olControlMousePosition olControlMousePosition_bottom');
                $("#Div_MousePosition_id").addClass('olControlMousePosition_top');
            }
        }
    }
    function SaveFeatureChangesSuccess(){
        alert("geometries successfully saved!");
    }
    function SaveFeatureChangesFailed() {
        alert("geometries save failed!");
    }

    //this method will register event on close icon on the tab..
    function registerMapHomeTabsCloseEvent() {

        $(".closeTab").click(function () {
        //there are multiple elements which has .closeTab icon so close the tab whose close icon is clicked
        var tabContentId = $(this).parent().attr("href");
                $(this).parent().parent().remove(); //remove li of tab
                $('#map_home_tabs a:last').tab('show'); // Select last tab
                $(tabContentId).remove(); //remove respective tab content

        });
    }

    function onPrintMap() {

            var layers = [];
            var extent = mapapp.map.getExtent();
            var baseLayer = "";
            var host = "";
            if (mapapp.map.baseLayer)
                baseLayer = mapapp.map.baseLayer.name;
            alert(mapapp.map.baseLayer.name);
            extent.transform(new OpenLayers.Projection("EPSG:900913"), new OpenLayers.Projection("EPSG:4326"));
            var center = '';
            center = mapapp.map.getCenter().transform(new OpenLayers.Projection("EPSG:900913"), new OpenLayers.Projection("EPSG:4326"));
            var size = $('#map2uweb_map').width() + "x" + $('#map2uweb_map').height();
            alert(size);
            var level = mapapp.map.getZoom();
            alert(center + "   " + level);
            for (var i = 0; i < mapapp.map.layers.length; i++)
            {
                if (mapapp.map.layers[i].params !== undefined)
                {
                    layers.push(mapapp.map.layers[i].name);
                }
                else

                {
                    if (mapapp.map.layers[i].isBaseLayer === true)
                    {

                    alert(mapapp.map.layers[i].name);
                    }
                }
            }
            window.open("{{path('map2ucore_createpdf')}}?layers=" + layers + "&extent=" + extent + "&baselayer=" + baseLayer + "&center=" + center.lat + "," + center.lon + "&level=" + level + "&size=" + size, "_blank", "fullscreen=yes");
    }
    function onCloseInfoPanel(){
        if ($('#map2uweb_maptoc').is(':visible'))
        {
                $('#map2uweb_maptoc').fadeOut();
                $('#map_mainpanel').removeClass("span5");
                $('#map_mainpanel').addClass("span12");
                $('#mapsize_restore_id').removeClass('hidden');
                $('#mapsize_restore_id').show();
                $('#map_gecoding_id').removeClass('hidden');
                $('#map_gecoding_id').show();
                $('#map_printmap_id').removeClass('hidden');
                $('#map_printmap_id').show();
        }
        else
        {
                $('#map_mainpanel').removeClass("span12");
                $('#map_mainpanel').addClass("span5");
                $('#map2uweb_maptoc').fadeIn();
                $('#mapsize_restore_id').hide();
                $('#map_gecoding_id').hide();
                $('#map_printmap_id').hide();
        }
        mapapp.map.updateSize();
    }
    function geocoding(form)
    {


    if (form.q.value === undefined || form.q.value.trim() === "")
    {
            alert("Message", "You need to input address or postal code inside search box!");
            return false;
    }

    var geocoder = new google.maps.Geocoder();
            geocoder.geocode({'address': form.q.value}, function(results, status) {


            if (status === google.maps.GeocoderStatus.OK)
            {
            var pt = results[0].geometry.location.toString();
                    pt = pt.replace(")", "");
                    pt = pt.replace("(", "");
                    pt = pt.split(",");
                    //       alert(pt[1] + "," + pt[0]);

                    var lonlat = new OpenLayers.LonLat(pt[1], pt[0]);
                    var lonlat2 = lonlat.clone();
                    lonlat.transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));
                    mapapp.map.setCenter(lonlat);
                 {#       if (Ext.getCmp('add_new_station_button_id') && (Ext.getCmp('add_new_station_button_id').pressed))
                        {

                            this.addNewStation('', lonlat2.lat, lonlat2.lon, "Create New Station");
                        }
                        else
                        {

                            if (popup)
                                popup.close(); #}

            var size = new OpenLayers.Size(21, 25);
                    var offset = new OpenLayers.Pixel( - (size.w / 2), - size.h);
                    var icon = new OpenLayers.Icon("{{ asset('/bundles/yorkujuturna/images/marker_green.png')}}", size, offset);
                    mapapp.markers.clearMarkers();
                    var marker = new OpenLayers.Marker(lonlat, icon);
                    marker.events.register('click', marker, clickGeoCodingMarker);
               {#     marker.events.register("mouseover", mapapp.markers, function (evt)
                    {
                    if (this.popup == null)
                    {
                    this.popup = this.createPopup();
                            mapapp.map.addPopup(this.popup);
                            this.popup.show();
                    }
                    else
                    {
                    this.popup.toggle();
                    }
                    currentPopup = this.popup;
                            OpenLayers.Event.stop(evt);
                    });
                    // create the framedCloud popup event
                    marker.events.register("mouseout", mapapp.markers, function (evt)
                    {
                    this.popup.toggle();
                            currentPopup = this.popup;
                            OpenLayers.Event.stop(evt);
                    });
                    // create the mousedown event to move a marker
                    marker.events.register('mousedown', mapapp.markers, function (evt)
                    {
                    // not sure what needs to go here?????
                    });
                    // drop the marker
                    marker.events.register('mouseup', mapapp.markers, function (evt)
                    {
                    this.moveTo(new OpenLayers.Pixel(evt.xy.x, evt.xy.y))
                            OpenLayers.Event.stop(evt);
                    });
                    #}

            mapapp.markers.addMarker(marker);
            }
            else
                    alert("Message", "Geocode was not successful for the following reason:" + status);
            });
            return false;
    }
    function clickGeoCodingMarker(e) {
            var lonlat = e.object.lonlat.clone();
            alert(lonlat.transform(new OpenLayers.Projection("EPSG:900913"), new OpenLayers.Projection("EPSG:4326")));
            //  var lonlat = mapapp.map.getLonLatFromPixel(e.object.lonlat)
            //  alert(lonlat);
            // Pop-up code will go here...
    }
    function getUserCustomGeometries(button,id) {

      //  alert(button.checked +  "   " + id);
        if(button.checked==true)
        {
            $.get("{{path('map2uweb_getgeometries')}}", {id: id}, function(response)
            {
                if (response.success == true)
                {
                    var wkt = new OpenLayers.Format.WKT();
                    var feature_text = JSON.stringify(response.data['the_geom']);
                    feature_text = feature_text.replace(/"/g, "");
                    var features = wkt.read(feature_text);
                    if (features) {

                        if (features.constructor != Array) {
                            features = [features];
                        }
                        for (var i = 0; i < features.length; ++i) {
                                features[i].geometry.transform(new OpenLayers.Projection("EPSG:32617"), new OpenLayers.Projection("EPSG:900913"));
                                features[i].attributes['id']= response.data['id'];   
                                 features[i].attributes['name']= response.data['name']; 
                        }
                    }

                    if (mapapp.UserCustomGeoms)
                    {
                        if (features)
                        {
                          //  alert("You have loaded ");
                            mapapp.UserCustomGeoms.addFeatures(features);
                        }
                    }

                }
            });
        }
        else
        {
            var feature=mapapp.UserCustomGeoms.getFeaturesByAttribute({'id':id})[0];
         //   alert(feature);
            if(feature)
            {
                 if (feature.constructor != Array) {
                     feature = [feature];
                 }
                 mapapp.UserCustomGeoms.removeFeatures(feature);
            }
        }
    }
    function refreshUserCustomGeomsList() {
    {% if app.user %}
    if ($('#map_mygeometriestree_id') != null)
    {

    $.get("{{path('map2uweb_getgeometrylist')}}", {userid: {{app.user.id}}}, function(response) {

    if (response.success == true)
    {

    var tree_root = $('<ul/>').appendTo('#map_mygeometriestree_id');
            for (var eachdata in response.data)
    {



    tree_root.append('<li><div class="custom_geometry" style="margin-left:5px;border-bottom: 1px #E0E1E2 dotted"> <div class="custom_geometry_checkbox"><input type="checkbox" onClick="getUserCustomGeometries(this,' + response.data[eachdata].id + ')"  name="map_mygeometriestree_id_' + response.data[eachdata].id +'"/></div><div class="custom_geometry_name">' + response.data[eachdata].name + '</div><div class="custom_geometry_button pull-right"><button value="Add Tourism Info" onclick="onAddCustomTourismInfo('+ response.data[eachdata].id +');">Add Tourism Info</button></div></div>');
            tree_root.append('</a></li>');
    }
    }
    });
    }
        {% endif %}
    }
    function onCreateFeaturePopup(feature,path) {
        
        $.get(path,{id:feature.attributes.id},function(response) {
        
            var popup=new OpenLayers.Popup.FramedCloud( 
                    "featurePopup", 
                    feature.geometry.getBounds().getCenterLonLat(), 
                    null, 
                    response, 
                    null, 
                    true 
            );
            feature.popup=popup;
            mapapp.map.addPopup(popup); 
        });
    }
    function onDeleteFeaturePopup(feature) {
        if(feature.popup)
        {
          mapapp.map.removePopup(feature.popup);
            feature.popup.destroy();
            feature.popup = null;
        }
    }
    function onCreateFeatureDetailsTab(feature) {
        
            var layername=mapapp.map.currentActiveLayer.replace(/ /g, "_");
             var path=null;
            if ($('#'+layername+'_map_selectedfeature_detailsinfo_tabpane').length === 0)
            {
                    // if #new_feature_save_pane not exist, then create it
                    $("#map_home_tabs li").removeClass("active");
            
                    $("#map_home_tabs").append('<li class="tab active"><a href="#'+layername+'_map_selectedfeature_detailsinfo_tabpane" data-toggle="tab" >'+mapapp.map.currentActiveLayer+' Details<button class="close closeTab" type="button" >Ã—</button></a></li>');
                    $('#map_home_tabs_content')
                    .append(
                            $('<div class="" style="padding: 10px 20px 10px 20px"></div>')
                            .addClass('tab-pane active')
                            .attr('id', layername+'_map_selectedfeature_detailsinfo_tabpane')
                            );
                    $('#'+layername+'_map_selectedfeature_detailsinfo_tabpane').siblings().removeClass("active");
                    $('#'+layername+'_map_selectedfeature_detailsinfo_tabpane').tab('show');
                    registerMapHomeTabsCloseEvent();
            }
            else
            {
            // if #new_feature_save_pane exist, then  activate it
            $('#map_home_tabs a[href=#'+layername+'_map_selectedfeature_detailsinfo_tabpane]').tab('show');
            }
            var featureHTML='<div style="padding:15px;"><ul>';
           
            for (var key in feature.attributes) 
            {
                featureHTML=featureHTML+"<li>" + key + ":" + feature.attributes[key] + "</li>"
                //alert(key);
            }
            featureHTML=featureHTML + "</ul></div>"
            $('#'+layername+'_map_selectedfeature_detailsinfo_tabpane').html(featureHTML);
            if(layername.toLowerCase()==='stations')
            {
               
                $.get("{{ path('juturnadefault_detail_stations')}}",{id:feature.attributes.id}, function(response) {
                    $('#'+layername+'_map_selectedfeature_detailsinfo_tabpane').html(response);
                });
                path="{{path('juturnadefault_popup_stations')}}";
                onCreateFeaturePopup(feature,path);
            }
            if(layername.toLowerCase()==='tourism')
            {
               
                $.get("{{ path('juturnadefault_detail_tourism')}}",{id:feature.attributes.id}, function(response) {
                    $('#'+layername+'_map_selectedfeature_detailsinfo_tabpane').html(response);
                });
                path="{{path('juturnadefault_popup_tourism')}}";
                onCreateFeaturePopup(feature,path);
            }
            
    }
    function onAddCustomTourismInfo(id) {
        
                    // if the save features button is disabled
       
            if ($('#new_customfeature_tourism_tabpane').length === 0)
            {
                    // if #new_feature_save_pane not exist, then create it
                    $("#map_home_tabs li").removeClass("active");
            
                    $("#map_home_tabs").append('<li class="tab active"><a href="#new_customfeature_tourism_tabpane" data-toggle="tab" >Add New Tourism Info<button class="close closeTab" type="button" >Ã—</button></a></li>');
                    $('#map_home_tabs_content')
                    .append(
                            $('<div class="" style="padding: 10px 20px 10px 20px"></div>')
                            .addClass('tab-pane active')
                            .attr('id', 'new_customfeature_tourism_tabpane')
                            );
                    $('#new_customfeature_tourism_tabpane').siblings().removeClass("active");
                    $('#new_customfeature_tourism_tabpane').tab('show');
                    registerMapHomeTabsCloseEvent();
            }
            else
            {
            // if #new_feature_save_pane exist, then  activate it
            $('#map_home_tabs a[href=#new_customfeature_tourism_tabpane]').tab('show');
            }


            $.get("{{ path('juturnadefault_custom_feature_add_new_tourisminfo')}}?id="+id, function(response) {

            //      $( "#result" ).empty().append( content );
                    $("#new_customfeature_tourism_tabpane").html(response);
            });
            

      
    }
    function onMapStationCenter(station_id){
    var lat = mapstation_markers[station_id].lat;
            var lng = mapstation_markers[station_id].lng;
            while( mapapp.map.popups.length ) {
                mapapp.map.removePopup(mapapp.map.popups[0]);
            }
            
            var lonlat=new OpenLayers.LonLat(lat, lng).transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913")) ;
         
            var popup = new OpenLayers.Popup.FramedCloud("popup", 
                                     lonlat,
                                     null,
                                    "<div> Station Name:"+mapstation_markers[station_id].name+"</div>"+
                                    "<div> Station Location:"+mapstation_markers[station_id].lng+","+mapstation_markers[station_id].lat+"</div>"        ,
                                     null, true, null);
            
            mapapp.map.addPopup(popup);
            
            //   alert(mapstation_markers[station_id].lat + "   " + mapstation_markers[station_id].lng);
            mapapp.map.setCenter(lonlat, 13);
    }
    function refreshLegend(map) {

            var tree_root = $('<ul/>').appendTo('#maplegendtree_id');
            for (var i = 0; i < map.layers.length; i++)
            {
            if (map.layers[i].params !== undefined)
            {
                tree_root.append('<li>' + map.layers[i].name);
                tree_root.append('<div>');
                tree_root.append("<img src='http://cobas.juturna.ca:8080/geoserver/wms?TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&EXCEPTIONS=application%2Fvnd.ogc.se_xml&FORMAT=image%2Fpng&LAYER=" + map.layers[i].params["LAYERS"] + "'>");
            //    $.get("http://cobas.juturna.ca:8080/geoserver/wms?TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&EXCEPTIONS=application%2Fvnd.ogc.se_xml&FORMAT=image%2Fpng&LAYER=" + map.layers[i].params["LAYERS"], function(data){
            //    alert(data);               
            //  trre_root.append(data);
            //               });
            //         trre_root.append("http://cobas.juturna.ca:8080/geoserver/wms?TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&EXCEPTIONS=application%2Fvnd.ogc.se_xml&FORMAT=image%2Fpng&LAYER=" + map.layers[i].params["LAYERS"]);
            //     alert("http://cobas.juturna.ca:8080/geoserver/wms?TRANSPARENT=true&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&EXCEPTIONS=application%2Fvnd.ogc.se_xml&FORMAT=image%2Fpng&LAYER=" + map.layers[i].params["LAYERS"]);
                tree_root.append('<div>');
                tree_root.append('</li>');
            }
        }
    //    $("#maplegendtree_id").append('</ul>');
    }
    function onAddTourismComments(id) {
        
            if ($('#new_tourism_comment_tabpane').length === 0)
            {
                    // if #new_feature_save_pane not exist, then create it
                    $("#map_home_tabs li").removeClass("active");
            
                    $("#map_home_tabs").append('<li class="tab active"><a href="#new_tourism_comment_tabpane" data-toggle="tab" >Add New Tourism Comment<button class="close closeTab" type="button" >Ã—</button></a></li>');
                    $('#map_home_tabs_content')
                    .append(
                            $('<div class="" style="padding: 10px 20px 10px 20px"></div>')
                            .addClass('tab-pane active')
                            .attr('id', 'new_tourism_comment_tabpane')
                            );
                    $('#new_tourism_comment_tabpane').siblings().removeClass("active");
                    $('#new_tourism_comment_tabpane').tab('show');
                    registerMapHomeTabsCloseEvent();
            }
            else
            {
            // if #new_feature_save_pane exist, then  activate it
            $('#map_home_tabs a[href=#new_tourism_comment_tabpane]').tab('show');
            }


            $.get("{{ path('juturnadefault_add_tourism_comment')}}",{id:id}, function(response) {

            //      $( "#result" ).empty().append( content );
                    $("#new_tourism_comment_tabpane").html(response);
            });
    }
    function showUserProfile(varCheckbox, id, projection)
    {
        if (varCheckbox.checked === false)
        {
            if (conform("Do you really want to remove this feature?"))
            {

            }
        }
        else
        {

            if (map !== undefined && map !== null)
            {

                $.ajax({
                type: "GET",
                        data: 'id=' + id,
                        url: "{#{ path('admin_showpolygon') }#}",
                        cache: false,
                        success: function(transport) {
                            if (transport.success == true)
                            {
                            var fea = new OpenLayers.Format.WKT().read(transport.data.the_geom);
                                    fea.geometry.transform(new OpenLayers.Projection("EPSG:4269"), new OpenLayers.Projection("EPSG:900913"));
                                    //  var layers=map.layers;
                                    //  for (var i=0;i<layers.length;i++)
                                    //  {
                                    //      alert(layers[i].name + "   " + layers[i].CLASS_NAME );
                                    //  }
                                    var layer = map.getLayersByName('Editor');
                                    //  alert(layer);
                                    if (layer)
                                    layer[0].addFeatures([fea]);
                                    map.zoomToExtent(fea.geometry.getBounds());
                            }

                    }
                });
            }
    // 
    // 
    // 
    //             onComplete: function(transport){
    //            if (200 === transport.status) {
    //                result = transport.responseText;
    //                alert(result);
    //            }
    //        }   

    // 
    // alert(mapeditor);
    //  alert(map.getCenter());
        }

    }
    function onMapCustomGeometries(feature_id) {

    }
    
      {#  OpenLayers.Control.GetFeature.prototype.request = function(bounds, options) {

options = options || {};
        var filter = new OpenLayers.Filter.Spatial({
//  type: this.filterType,
type: OpenLayers.Filter.Spatial.INTERSECTS,
        value: bounds.transform(this.internalProjection, this.externalProjection)
        });
        var point = bounds.getCenterLonLat();
        // Set the cursor to "wait" to tell the user we're working.
        OpenLayers.Element.addClass(this.map.viewPortDiv, "olCursorWait");
        var response = this.protocol.read({

maxFeatures: options.single === true ? this.maxFeatures : undefined,
        filter: filter,
        callback: function(result) {



if (result.success()) {
//alert(result.features.length);
if (result.features.length) {


for (var i = 0, len = result.features.length; i < len; ++i) {


result.features[i].geometry.transform(this.externalProjection, this.internalProjection);
        }

if (options.single === true) {
this.selectBestFeature(result.features,
        bounds.getCenterLonLat().transform(this.externalProjection, this.internalProjection), options);
        } else {
this.select(result.features);
        }
} else if (options.hover) {
this.hoverSelect();
        } else {
this.events.triggerEvent("clickout");
        if (this.clickout) {
this.unselectAll();
        }
}
}
// Reset the cursor.
OpenLayers.Element.removeClass(this.map.viewPortDiv, "olCursorWait");
        },
        scope: this
        });
        if (options.hover === true) {
this.hoverResponse = response;
        }
};
   
        #}
</script>
{% endblock %}